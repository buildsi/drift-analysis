// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "@vsoch",
            "url": "https://github.com/buildsi/drift-server/issues"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get server info",
                "produces": [
                    "application/json"
                ],
                "summary": "Get server info",
                "operationId": "get-server-info",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/build/": {
            "post": {
                "description": "create a new build",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new build",
                "operationId": "post-build",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/builds/": {
            "get": {
                "description": "List builds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all builds",
                "operationId": "get-builds",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/commits/": {
            "get": {
                "description": "List commits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all commits",
                "operationId": "get-commits",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/inflection-point/": {
            "post": {
                "description": "created a new inflection point",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new inflection point",
                "operationId": "post-inflection-point",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/inflection-points/": {
            "get": {
                "description": "List all inflectoin points",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all inflection points",
                "operationId": "get-inflection-points",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/packages/": {
            "get": {
                "description": "List packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all packages",
                "operationId": "get-packages",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/spec/": {
            "post": {
                "description": "create a new package spec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new package spec",
                "operationId": "post-spec",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/specs/": {
            "get": {
                "description": "List specs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all specs",
                "operationId": "get-specs",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/tags/": {
            "get": {
                "description": "List tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all tags",
                "operationId": "get-tags",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Drift Server API",
	Description: "Record metadata about inflection point changes in packages",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
